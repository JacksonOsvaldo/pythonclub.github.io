<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PythonClub - Elio Duarte</title><link href="http://pythonclub.com.br/" rel="alternate"></link><link href="http://pythonclub.com.br/feeds/elio-duarte.atom.xml" rel="self"></link><id>http://pythonclub.com.br/</id><updated>2014-09-05T18:00:00-03:00</updated><entry><title>Deploy App Django no Openshift</title><link href="http://pythonclub.com.br/deploy-app-django-openshift.html" rel="alternate"></link><published>2014-09-05T18:00:00-03:00</published><updated>2014-09-05T18:00:00-03:00</updated><author><name>Elio Duarte</name></author><id>tag:pythonclub.com.br,2014-09-05:/deploy-app-django-openshift.html</id><summary type="html">&lt;p&gt;Recentemente quis testar o Django no Openshift mas não encontrei nenhum tutorial atualizado sobre o assunto, por isso resolvi escrever um.
Nosso objetivo é ter um app bem básico em Django rodando no &lt;a href="https://www.openshift.com/products/online"&gt;Openshift Online&lt;/a&gt;.
Eu utilizei o Ubuntu 14.04 nesse tutorial mas excluindo a parte de instalação do …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Recentemente quis testar o Django no Openshift mas não encontrei nenhum tutorial atualizado sobre o assunto, por isso resolvi escrever um.
Nosso objetivo é ter um app bem básico em Django rodando no &lt;a href="https://www.openshift.com/products/online"&gt;Openshift Online&lt;/a&gt;.
Eu utilizei o Ubuntu 14.04 nesse tutorial mas excluindo a parte de instalação do programa &lt;em&gt;rhc&lt;/em&gt;, ele serve para qualquer sistema unix-like.&lt;/p&gt;
&lt;h3&gt;O que é?&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://openshift.github.io/"&gt;Openshift Origin&lt;/a&gt; é um PaaS opensource mantido pela RedHat.
A empresa também tem um serviço de hospedagem, o &lt;a href="https://www.openshift.com/products/online"&gt;Openshift Online&lt;/a&gt;, com planos pagos e gratuitos.
No plano gratuito você pode utilizar até três &lt;em&gt;small gears&lt;/em&gt;, containers onde a sua aplicação irá rodar.
Cada &lt;em&gt;small gear&lt;/em&gt; possui:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;512MB de RAM&lt;/li&gt;
&lt;li&gt;100MB de swap&lt;/li&gt;
&lt;li&gt;1GB de espaço em disco&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Em cada &lt;em&gt;gear&lt;/em&gt; você pode ter um ou mais &lt;em&gt;cartridges&lt;/em&gt;, funcionalidades que sua app poderá utilizar.
Existem &lt;em&gt;cartridges&lt;/em&gt; que habilitam uma linguagem (Python, Ruby, Java), um banco de dados (PostgreSQL, MongoDB), um serviço (Cron, MMS), etc.&lt;/p&gt;
&lt;h3&gt;Criação de conta e login&lt;/h3&gt;
&lt;p&gt;Você precisa ter uma conta no &lt;a href="https://www.openshift.com/products/online"&gt;Openshift Online&lt;/a&gt; e o programa &lt;strong&gt;rhc&lt;/strong&gt; instalado em sua máquina.&lt;/p&gt;
&lt;p&gt;Crie uma conta gratuita clicando &lt;a href="https://www.openshift.com/app/account/new"&gt;aqui&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Depois instale o programa &lt;strong&gt;ruby&lt;/strong&gt; e o &lt;strong&gt;rhc&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get update &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt-get install -y ruby
sudo gem install rhc
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Clique &lt;a href="http://openshift.github.io/documentation/oo_client_tools_installation_guide.html"&gt;aqui&lt;/a&gt; para ver como instalar o &lt;strong&gt;rhc&lt;/strong&gt; em outras plataformas.&lt;/p&gt;
&lt;p&gt;Faça o login:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rhc setup
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Por fim confirme que você consegue conectar em sua conta executando:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rhc apps
No applications. Use &lt;span class="s1"&gt;&amp;#39;rhc create-app&amp;#39;&lt;/span&gt;.
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Criando um app no Openshift&lt;/h3&gt;
&lt;p&gt;Crie um app com nome de &lt;strong&gt;django&lt;/strong&gt; usando o &lt;em&gt;cartridge&lt;/em&gt; &lt;strong&gt;Python 2.7&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rhc create-app -a django -t python-2.7
Application Options
-------------------
Domain:     stvs
Cartridges: python-2.7
Gear Size:  default
Scaling:    no

Creating application &lt;span class="s1"&gt;&amp;#39;django&amp;#39;&lt;/span&gt; ... &lt;span class="k"&gt;done&lt;/span&gt;

Waiting &lt;span class="k"&gt;for&lt;/span&gt; your DNS name to be available ... &lt;span class="k"&gt;done&lt;/span&gt;

Cloning into &lt;span class="s1"&gt;&amp;#39;django&amp;#39;&lt;/span&gt;...

Your application &lt;span class="s1"&gt;&amp;#39;django&amp;#39;&lt;/span&gt; is now available.

URL:        http://django-stvs.rhcloud.com/
SSH to:     5409ae505973ca58d200015e@django-stvs.rhcloud.com
Git remote: ssh://5409ae505973ca58d200015e@django-stvs.rhcloud.com/~/git/django.git/
Cloned to:  /home/usuario/django
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;No retorno do comando podemos ver algumas informações básicas do app, inclusive a URL, que já está funcionando.
Acesse o endereço e veja a página padrão que foi criada.&lt;/p&gt;
&lt;h3&gt;Definindo dependências&lt;/h3&gt;
&lt;p&gt;Acesse o repositório que foi criado ao executar &lt;code&gt;rhc app-create&lt;/code&gt;, ele terá o nome do seu app:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; django/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Existem duas formas de definir as dependências do seu app Python no Openshift, pelo arquivo &lt;strong&gt;setup.py&lt;/strong&gt; ou pelo &lt;strong&gt;requirements.txt&lt;/strong&gt;.
Durante o processo de &lt;strong&gt;deploy&lt;/strong&gt; o Openshift automaticamente executa &lt;code&gt;python setup.py install&lt;/code&gt; e &lt;code&gt;pip -r requirements.txt&lt;/code&gt; na raiz do repositório.&lt;/p&gt;
&lt;p&gt;Usaremos somente o &lt;strong&gt;requirements.txt&lt;/strong&gt;, então exclua o &lt;strong&gt;setup.py&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rm setup.py
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Faça &lt;em&gt;commit&lt;/em&gt; mas não execute &lt;code&gt;git push&lt;/code&gt; ainda.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git commit -am &lt;span class="s1"&gt;&amp;#39;removido setup.py&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Adicione o Django no &lt;em&gt;requirements.txt&lt;/em&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Django==1.7&amp;#39;&lt;/span&gt; &amp;gt; requirements.txt
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Crie um virtualenv para testar se o &lt;strong&gt;requirements.txt&lt;/strong&gt; está correto:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pyenv virtualenv &lt;span class="m"&gt;2&lt;/span&gt;.7.8 openshift
pyenv activate openshift
pip install -r requirements.txt
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Por fim, faça um novo &lt;em&gt;commit&lt;/em&gt;.&lt;/p&gt;
&lt;h3&gt;Criando o projeto Django&lt;/h3&gt;
&lt;p&gt;De agora em diante não direi mais para você fazer o &lt;em&gt;commit&lt;/em&gt; o tempo todo mas é uma boa prática que você o faça a cada etapa.&lt;/p&gt;
&lt;p&gt;Execute o comando abaixo para criar o arquivo &lt;strong&gt;.gitignore&lt;/strong&gt; e adicionar algumas entradas nele.
Esse arquivo irá impedir que alguns arquivos desnecessários sejam adicionados ao git.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cat &amp;gt; .gitignore &lt;span class="s"&gt;&amp;lt;&amp;lt;EOF&lt;/span&gt;
&lt;span class="s"&gt;*.pyc&lt;/span&gt;
&lt;span class="s"&gt;*.sqlite3&lt;/span&gt;
&lt;span class="s"&gt;EOF&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Crie um projeto Django com o nome &lt;strong&gt;openshift&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;django-admin.py startproject openshift
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Acesse o projeto e crie um &lt;em&gt;app&lt;/em&gt; com nome &lt;strong&gt;exemplo&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; openshift
django-admin.py startapp exemplo
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Execute o &lt;em&gt;migrate&lt;/em&gt; inicial e depois inicie o servidor de teste:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;python manage.py migrate
python manage.py runserver
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Acesse o endereço &lt;em&gt;127.0.0.1:8000&lt;/em&gt; e verifique se você consegue ver a mensagem &lt;strong&gt;It worked!&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;Configurando o projeto&lt;/h3&gt;
&lt;p&gt;Ao executar o &lt;em&gt;deploy&lt;/em&gt; da sua aplicação, o Openshift irá procurar pelo WSGI &lt;em&gt;entry-point&lt;/em&gt; em alguns arquivos.
Um desses arquivos é o &lt;strong&gt;wsgi.py&lt;/strong&gt; na raiz do repositório.
O WSGI &lt;em&gt;entry-point&lt;/em&gt; nada mais é do que o &lt;em&gt;callable&lt;/em&gt; do servidor WSGI.
No nosso caso usamos uma variável mas poderia ser um método ou uma função, o importante é que ele tenha o nome de &lt;strong&gt;application&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Execute o comando abaixo para criar o WSGI &lt;em&gt;entry-point&lt;/em&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cat &amp;gt; wsgi.py &lt;span class="s"&gt;&amp;lt;&amp;lt;EOF&lt;/span&gt;
&lt;span class="s"&gt;#!/usr/bin/python&lt;/span&gt;

&lt;span class="s"&gt;import os&lt;/span&gt;
&lt;span class="s"&gt;import sys&lt;/span&gt;
&lt;span class="s"&gt;from django.core.wsgi import get_wsgi_application&lt;/span&gt;

&lt;span class="s"&gt;sys.path.append(os.path.join(os.environ[&amp;#39;OPENSHIFT_REPO_DIR&amp;#39;], &amp;#39;openshift&amp;#39;))&lt;/span&gt;
&lt;span class="s"&gt;os.environ[&amp;#39;DJANGO_SETTINGS_MODULE&amp;#39;] = &amp;#39;openshift.production&amp;#39;&lt;/span&gt;

&lt;span class="s"&gt;application = get_wsgi_application()&lt;/span&gt;
&lt;span class="s"&gt;EOF&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Abra o arquivo de configuração padrão do seu projeto Django:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;vi openshift/openshift/settings.py
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Adicione o app &lt;strong&gt;exemplo&lt;/strong&gt; em &lt;strong&gt;INSTALLED_APPS&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;INSTALLED_APPS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
   &lt;span class="s1"&gt;&amp;#39;django.contrib.admin&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="o"&gt;...&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;exemplo&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Salve e depois abra o arquivo de configuração que usaremos em produção.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;vi openshift/openshift/production.py
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Comece importando todas as configuração do arquivo de configuração padrão:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;settings&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Desabilite o modo &lt;strong&gt;debug&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;DEBUG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Existem várias variáveis de ambiente dentro de um &lt;em&gt;gear&lt;/em&gt;, utilizaremos as seguintes delas em nossa configuração:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;OPENSHIFT_APP_DNS&lt;/strong&gt;: nome completo do domínio da sua aplicação, no meu caso é &lt;em&gt;http://django-stvs.rhcloud.com/&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;OPENSHIFT_DATA_DIR&lt;/strong&gt;: diretório para dados persistentes.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;OPENSHIFT_REPO_DIR&lt;/strong&gt;: diretório onde estão os arquivos do &lt;em&gt;deploy&lt;/em&gt; atual.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;OPENSHIFT_SECRET_TOKEN&lt;/strong&gt;: hash gerado automaticamente quando o &lt;em&gt;gear&lt;/em&gt; é criado.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Você pode ver outras variáveis disponíveis &lt;a href="https://developers.openshift.com/en/managing-environment-variables.html"&gt;aqui&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Copie as configurações:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;SECRET_KEY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;OPENSHIFT_SECRET_TOKEN&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;ALLOWED_HOSTS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;OPENSHIFT_APP_DNS&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;

&lt;span class="n"&gt;DATABASES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;default&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;ENGINE&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;django.db.backends.sqlite3&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;NAME&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;OPENSHIFT_DATA_DIR&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;db.sqlite3&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Os &lt;em&gt;cartridges&lt;/em&gt; padrões de Python, utilizam o diretório &lt;em&gt;wsgi/static&lt;/em&gt; para servir arquivos estáticos pelo Apache.
Ele ainda não existe, para criá-lo execute:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkdir -p wsgi/static
touch wsgi/static/.gitkeep
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Por fim adicione a linha abaixo em sua configuração:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;STATIC_ROOT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;OPENSHIFT_REPO_DIR&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;wsgi&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;static&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Criando uma view simples&lt;/h2&gt;
&lt;p&gt;Vamos criar uma &lt;em&gt;view&lt;/em&gt; básica somente para testar nosso projeto.&lt;/p&gt;
&lt;p&gt;Adicione a url abaixo no arquivo &lt;em&gt;openshift/openshift/urls.py&lt;/em&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;urlpatterns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;patterns&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;^$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;exemplo.views.home&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;home&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Depois crie a &lt;em&gt;view&lt;/em&gt; em &lt;em&gt;openshift/exemplo/views.py&lt;/em&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.http&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;home&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Hello World!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Execute novamente o servidor de teste, acesse o endereço '127.0.0.1:8000/' e confirme que a mensagem &lt;strong&gt;Hello World!&lt;/strong&gt; aparece.&lt;/p&gt;
&lt;h2&gt;Fazendo deploy&lt;/h2&gt;
&lt;p&gt;Na raiz do repositório, existe um diretório oculto chamado &lt;strong&gt;.openshift&lt;/strong&gt;.
Vamos listar seu conteúdo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; .openshift
tree
.
├── action_hooks
│   └── README.md
├── cron
│   ├── daily
│   ├── hourly
│   ├── minutely
│   ├── monthly
│   ├── README.cron
│   └── weekly
│       ├── chrono.dat
│       ├── chronograph
│       ├── jobs.allow
│       ├── jobs.deny
│       └── README
├── markers
│   └── README.md
└── README.md
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Cada diretório dentro dele tem uma função especial.&lt;/p&gt;
&lt;h4&gt;Cron&lt;/h4&gt;
&lt;p&gt;Essa pasta serve para agendar a execução de scripts.
Ela funciona igual aos diretórios &lt;strong&gt;cron&lt;/strong&gt; em qualquer distribuição Linux.
Você precisa adicionar o &lt;em&gt;cartridge&lt;/em&gt; &lt;strong&gt;cron&lt;/strong&gt; ao seu app para que os agendamentos funcionem.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rhc cartridge add -a django -c cron-1.4
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Markers&lt;/h4&gt;
&lt;p&gt;Nesta pasta você pode criar arquivos que alteram o comportamento do Openshift durante algumas ações.
Por exemplo, se você criar o arquivo &lt;strong&gt;hot_deploy&lt;/strong&gt; o servidor Apache não será reiniciado durante o processo de &lt;strong&gt;build&lt;/strong&gt;.
Outras &lt;strong&gt;markers&lt;/strong&gt; disponíveis estão detalhadas &lt;a href="http://openshift.github.io/documentation/oo_cartridge_guide.html#markers-7"&gt;aqui&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;Action Hooks&lt;/h4&gt;
&lt;p&gt;O funcionamento dessa pasta é bem parecido com o da pasta &lt;strong&gt;markers&lt;/strong&gt;.
Em algumas ações o Openshift vai procurar determinados arquivos dentro dela e executá-los em uma determinada ordem.
Para listar quais são as ações disponíveis execute o comando &lt;code&gt;rhc app --help&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rhc app --help
Usage: rhc app &amp;lt;action&amp;gt;

Creates and controls an OpenShift application.  To see the list of all applications use the rhc domain show command.  Note that delete is not reversible
and will stop your application and &lt;span class="k"&gt;then&lt;/span&gt; remove the application and repo from the remote server. No &lt;span class="nb"&gt;local&lt;/span&gt; changes are made.

List of Actions
configure     Configure several properties that apply to an application
create        Create an application
delete        Delete an application from the server
deploy        Deploy a git reference or binary file of an application
force-stop    Stops all application processes
reload        Reload the application&lt;span class="s1"&gt;&amp;#39;s configuration&lt;/span&gt;
&lt;span class="s1"&gt;restart       Restart the application&lt;/span&gt;
&lt;span class="s1"&gt;scale-down    Scale down the application&amp;#39;&lt;/span&gt;s web cartridge
scale-up      Scale up the application&lt;span class="s1"&gt;&amp;#39;s web cartridge&lt;/span&gt;
&lt;span class="s1"&gt;show          Show information about an application&lt;/span&gt;
&lt;span class="s1"&gt;start         Start the application&lt;/span&gt;
&lt;span class="s1"&gt;stop          Stop the application&lt;/span&gt;
&lt;span class="s1"&gt;tidy          Clean out the application&amp;#39;&lt;/span&gt;s logs and tmp directories and tidy up the git repo on the server
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Por exemplo, na ação &lt;strong&gt;build&lt;/strong&gt;, os arquivos serão procurados e executados na seguinte ordem:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pre_build&lt;/li&gt;
&lt;li&gt;build&lt;/li&gt;
&lt;li&gt;prepare&lt;/li&gt;
&lt;li&gt;deploy&lt;/li&gt;
&lt;li&gt;post_deploy&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Não é preciso que nenhum arquivo exista, essa é só uma forma de controlar o comportamento do seu app.
Para saber mais sobre &lt;em&gt;action hooks&lt;/em&gt; clique &lt;a href="http://openshift.github.io/documentation/oo_user_guide.html#cartridge-control-action-hooks"&gt;aqui&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;No nosso caso, só vamos usar o arquivo &lt;strong&gt;deploy&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;touch .openshift/action_hooks/deploy
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;É preciso que o arquivo seja executável, então:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;chmod +x .openshift/action_hooks/deploy
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Em nosso &lt;em&gt;deploy&lt;/em&gt;, apenas vamos atualizar o schema do banco e recolher os arquivos estáticos.
Note que precisamos informar o arquivo de configuração que usaremos em produção, que é diferente daquele que está no arquivo &lt;strong&gt;manage.py&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cat &amp;gt; .openshift/action_hooks/deploy &lt;span class="s"&gt;&amp;lt;&amp;lt;EOF&lt;/span&gt;
&lt;span class="s"&gt;PYTHONPATH=\$OPENSHIFT_REPO_DIR/openshift&lt;/span&gt;
&lt;span class="s"&gt;django-admin.py migrate --settings=&amp;#39;openshift.production&amp;#39; --pythonpath=\$PYTHONPATH&lt;/span&gt;
&lt;span class="s"&gt;python \$PYTHONPATH/manage.py collectstatic -c --noinput --settings=&amp;#39;openshift.production&amp;#39; --pythonpath=\$PYTHONPATH&lt;/span&gt;
&lt;span class="s"&gt;EOF&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Feito isso, faça &lt;em&gt;commit&lt;/em&gt; e depois execute &lt;code&gt;git push&lt;/code&gt;.
O &lt;em&gt;push&lt;/em&gt; irá disparar o processo de &lt;strong&gt;build&lt;/strong&gt;.
Você verá varias mensagens em seu terminal mas no final irá aparecer:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;...
remote: Git Post-Receive Result: success
remote: Activation status: success
remote: Deployment completed with status: success
...
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Essa saída mostra que o &lt;strong&gt;deploy&lt;/strong&gt; foi executado com sucesso.
Se você acessar a URL da sua app aparecerá &lt;strong&gt;'Hello World!'&lt;/strong&gt;.
Pronto seu projeto Django está rodando no Openshift!&lt;/p&gt;
&lt;p&gt;Aguardo feedback com dúvidas, sugestões, correções etc nos comentários.&lt;/p&gt;
&lt;p&gt;Abraços e bons projetos!&lt;/p&gt;
&lt;h2&gt;Bonus&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Execute o &lt;code&gt;rhc tail&lt;/code&gt; para visualizar o arquivos de log do seu app, ótimo para visualizar problemas.&lt;/li&gt;
&lt;li&gt;Acesse a &lt;a href="http://openshift.github.io/documentation/"&gt;documentação oficial&lt;/a&gt; para saber mais detalhes sobre o Openshift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eliostvs/django-kb-example"&gt;Aqui&lt;/a&gt; tem um &lt;em&gt;quickstart&lt;/em&gt; de uma base de conhecimento para você utilizar no Openshift.&lt;/li&gt;
&lt;/ul&gt;</content><category term="tutorial"></category><category term="django"></category><category term="openshift"></category><category term="paas"></category></entry></feed>