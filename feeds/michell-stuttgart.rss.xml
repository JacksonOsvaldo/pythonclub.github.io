<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PythonClub - Michell Stuttgart</title><link>http://pythonclub.com.br/</link><description></description><lastBuildDate>Thu, 20 Jul 2017 23:45:24 -0300</lastBuildDate><item><title>Peewee - Um ORM Python minimalista</title><link>http://pythonclub.com.br/peewee-um-orm-python-minimalista.html</link><description>&lt;p&gt;Conheça o Peewee, um prático e minimalista ORM Python&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michell Stuttgart</dc:creator><pubDate>Thu, 20 Jul 2017 23:45:24 -0300</pubDate><guid isPermaLink="false">tag:pythonclub.com.br,2017-07-20:/peewee-um-orm-python-minimalista.html</guid><category>Python</category><category>Peewee</category><category>ORM</category><category>banco de dados</category></item><item><title>Abrangência de Listas e Dicionários</title><link>http://pythonclub.com.br/abrangencia-de-listas-e-dicionarios-com-python.html</link><description>&lt;p&gt;A utilização de listas em Python é algo trivial. A facilidade provida pela linguagem aliada a simplicidade da estrutura de dados &lt;em&gt;list&lt;/em&gt; a torna, ao lado dos dicionários &lt;em&gt;dict&lt;/em&gt;, uma das estrutura de dados mais utilizadas em Python. Aqui neste tutorial irei compartilhar algo que aprendi trabalhando com listas e …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michell Stuttgart</dc:creator><pubDate>Mon, 16 Jan 2017 10:37:39 -0200</pubDate><guid isPermaLink="false">tag:pythonclub.com.br,2017-01-16:/abrangencia-de-listas-e-dicionarios-com-python.html</guid><category>python</category><category>tutorial</category><category>list comprehensions</category></item><item><title>Como distribuir sua aplicação Python com PyPI</title><link>http://pythonclub.com.br/como-distribuir-sua-aplicacao-python-com-pypi.html</link><description>&lt;p&gt;Imagine a seguinte situação: você passou alguns dias (ou mesmo meses) desenvolvendo uma módulo python, escreveu testes, implementou funcionalidades e depois de alguns ajustes, chegou a hora de liberar seu software para que outros desenvolvedores possam utilizá-lo. Qual o melhor modo de distribuí-lo?&lt;/p&gt;
&lt;p&gt;Caro leitor, se você costuma programar em …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michell Stuttgart</dc:creator><pubDate>Fri, 17 Jun 2016 13:47:24 -0300</pubDate><guid isPermaLink="false">tag:pythonclub.com.br,2016-06-17:/como-distribuir-sua-aplicacao-python-com-pypi.html</guid><category>python</category><category>pypi</category><category>tutorial</category><category>desenvolvimento</category><category>pip</category></item><item><title>Relatórios de testes com Coveralls</title><link>http://pythonclub.com.br/gerando-relatorios-de-testes-com-coveralls.html</link><description>&lt;p&gt;Na &lt;a href="http://codigoavulso.com.br/python-com-unittest-travis-ci-coveralls-e-landscape-parte-3-de-4.html"&gt;terceira parte&lt;/a&gt; do tutorial sobre &lt;em&gt;unittest&lt;/em&gt;, vimos como utilizar o serviço &lt;a href="https://coveralls.io/"&gt;Coveralls&lt;/a&gt; para gerar relatórios sobre o testes do nosso projeto. Entretanto, uma "desvantagem" do serviço é que o processo de análise é iniciado apenas quando executarmos um &lt;em&gt;push&lt;/em&gt; ou um &lt;em&gt;pull request&lt;/em&gt;. Sendo assim, não seria interessante termos …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michell Stuttgart</dc:creator><pubDate>Fri, 03 Jun 2016 11:28:55 -0300</pubDate><guid isPermaLink="false">tag:pythonclub.com.br,2016-06-03:/gerando-relatorios-de-testes-com-coveralls.html</guid><category>python</category><category>coveralls</category><category>coverage</category><category>relatório</category><category>test</category></item><item><title>Python com Unittest, Travis CI, Coveralls e Landscape (Parte 4 de 4)</title><link>http://pythonclub.com.br/python-com-unittest-travis-ci-coveralls-e-landscape-parte-4-de-4.html</link><description>&lt;p&gt;Fala pessoal, tudo bem?&lt;/p&gt;
&lt;p&gt;Na &lt;a href="python-com-unittest-travis-ci-coveralls-e-landscape-parte-3-de-4.html"&gt;terceira&lt;/a&gt; parte deste tutorial, aprendemos a usar o &lt;code&gt;Coveralls&lt;/code&gt; para gerar relatórios de testes para o nosso projeto. A próxima ferramenta que iremos estudar será o serviço &lt;code&gt;Landscape&lt;/code&gt;. Neste tutorial serei breve, já que o uso &lt;em&gt;default&lt;/em&gt; da ferramenta é bem simples.&lt;/p&gt;
&lt;h4&gt;Sobre o Landscape …&lt;/h4&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michell Stuttgart</dc:creator><pubDate>Fri, 20 May 2016 21:09:18 -0300</pubDate><guid isPermaLink="false">tag:pythonclub.com.br,2016-05-20:/python-com-unittest-travis-ci-coveralls-e-landscape-parte-4-de-4.html</guid><category>git</category><category>travis-ci</category><category>python</category><category>coveralls</category><category>landscape</category><category>test</category><category>tutorial</category></item><item><title>Python com Unittest, Travis CI, Coveralls e Landscape (Parte 3 de 4)</title><link>http://pythonclub.com.br/python-com-unittest-travis-ci-coveralls-e-landscape-parte-3-de-4.html</link><description>&lt;p&gt;Fala pessoal, tudo bem?&lt;/p&gt;
&lt;p&gt;Na &lt;a href="python-com-unittest-travis-ci-coveralls-e-landscape-parte-2-de-4.html"&gt;segunda&lt;/a&gt; parte deste tutorial, aprendemos a usar o &lt;code&gt;Travis CI&lt;/code&gt; para automatizar os testes do nosso projeto, facilitando a manutenção do código quando temos vários colaboradores. Nesta terceira parte, vamos configurar o serviço &lt;a href="https://coveralls.io"&gt;Coveralls&lt;/a&gt; para que o mesmo gere relatórios de teste sobre o nosso …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michell Stuttgart</dc:creator><pubDate>Fri, 13 May 2016 12:25:00 -0300</pubDate><guid isPermaLink="false">tag:pythonclub.com.br,2016-05-13:/python-com-unittest-travis-ci-coveralls-e-landscape-parte-3-de-4.html</guid><category>git</category><category>travis-ci</category><category>python</category><category>coveralls</category><category>landscape</category><category>test</category><category>tutorial</category></item><item><title>Python com Unittest, Travis CI, Coveralls e Landscape (Parte 2 de 4)</title><link>http://pythonclub.com.br/python-com-unittest-travis-ci-coveralls-e-landscape-parte-2-de-4.html</link><description>&lt;p&gt;Fala pessoal, tudo bem?&lt;/p&gt;
&lt;p&gt;Na &lt;a href="python-com-unittest-travis-ci-coveralls-e-landscape-parte-1-de-4.html"&gt;primeira&lt;/a&gt; parte deste tutorial, aprendemos como criar testes para nosso projeto. Nesta segunda parte, vamos configurar o serviço Travis CI para que o mesmo execute os testes do nosso projeto diretamente no github. Isso é especialmente útil quando possuímos várias pessoas trabalhando em um mesmo …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michell Stuttgart</dc:creator><pubDate>Sun, 08 May 2016 20:34:44 -0300</pubDate><guid isPermaLink="false">tag:pythonclub.com.br,2016-05-08:/python-com-unittest-travis-ci-coveralls-e-landscape-parte-2-de-4.html</guid><category>git</category><category>travis-ci</category><category>python</category><category>coveralls</category><category>landscape</category><category>test</category><category>tutorial</category></item><item><title>Python com Unittest, Travis CI, Coveralls e Landscape (Parte 1 de 4)</title><link>http://pythonclub.com.br/python-com-unittest-travis-ci-coveralls-e-landscape-parte-1-de-4.html</link><description>&lt;p&gt;Durante o desenvolvimento de um software, tão importante quanto escrever um código organizado e que siga as melhores práticas, é garantir que o mesmo cumpra os requisitos a que ele se propõe. Em outras palavras, garantir que o software funcione de maneira adequada.&lt;/p&gt;
&lt;p&gt;O processo de testes de um software …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michell Stuttgart</dc:creator><pubDate>Fri, 06 May 2016 01:42:18 -0300</pubDate><guid isPermaLink="false">tag:pythonclub.com.br,2016-05-06:/python-com-unittest-travis-ci-coveralls-e-landscape-parte-1-de-4.html</guid><category>git</category><category>travis-ci</category><category>python</category><category>coveralls</category><category>landscape</category><category>test</category><category>tutorial</category></item></channel></rss>