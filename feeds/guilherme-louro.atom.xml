<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PythonClub - Guilherme Louro</title><link href="http://pythonclub.com.br/" rel="alternate"></link><link href="http://pythonclub.com.br/feeds/guilherme-louro.atom.xml" rel="self"></link><id>http://pythonclub.com.br/</id><updated>2015-03-02T00:20:00-03:00</updated><entry><title>Configurando ambiente Django com Apache e mod_wsgi</title><link href="http://pythonclub.com.br/configurando-ambiente-django-com-apache-e-mod-wsgi.html" rel="alternate"></link><published>2015-03-02T00:20:00-03:00</published><updated>2015-03-02T00:20:00-03:00</updated><author><name>Guilherme Louro</name></author><id>tag:pythonclub.com.br,2015-03-02:/configurando-ambiente-django-com-apache-e-mod-wsgi.html</id><summary type="html">&lt;h3&gt;Entendendo a necessidade&lt;/h3&gt;
&lt;p&gt;Muitas vezes encontramos dificuldade em colocar nossas aplicações para funcionar em um servidor devido ao pouco conhecimento em infraestrutura, principalmente aqueles que vieram do php, onde, subir um site e já o ver funcionando no ambiente final se trata apenas de subir os arquivos para a pasta …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Entendendo a necessidade&lt;/h3&gt;
&lt;p&gt;Muitas vezes encontramos dificuldade em colocar nossas aplicações para funcionar em um servidor devido ao pouco conhecimento em infraestrutura, principalmente aqueles que vieram do php, onde, subir um site e já o ver funcionando no ambiente final se trata apenas de subir os arquivos para a pasta &lt;strong&gt;www&lt;/strong&gt; e pronto, certo? Não, não é bem por aí ...&lt;/p&gt;
&lt;p&gt;Normalmente quando configuramos a hospedagem de um domínio através de um software de gestão de alojamento web &lt;em&gt;(&lt;a href="http://cpanel.net"&gt;cpanel&lt;/a&gt; é  o mais conhecido)&lt;/em&gt; automaticamente o sistema configura o VirtualHost específico para o seu domínio cadastrado, ja direcionando a path para a sua pasta &lt;em&gt;www&lt;/em&gt; ou &lt;strong&gt;public_html&lt;/strong&gt;. Mas como isso é feito? Não entrarei em detalhes de como o cpanel funciona, mas irei demonstrar aqui como configuramos um servidor com &lt;a href="http://httpd.apache.org/docs/"&gt;apache&lt;/a&gt; para receber nossa aplicação.&lt;/p&gt;
&lt;h3&gt;Mas por que o Apache?&lt;/h3&gt;
&lt;p&gt;A partir do momento que eu mudei meu foco, saindo do PHP para trabalhar com &lt;strong&gt;Python&lt;/strong&gt;, eu acabei "abandonando" o Apache para trabalhar com Nginx. Porém, me deparei com um projeto onde tinha que funcionar em uma Hospedagem compartilhada na qual só funciona o apache. Como não vi nada relacionado a essa configuração aqui no &lt;strong&gt;Pythonclub&lt;/strong&gt;, achei que seria útil para muitos que podem cair em uma situação parecida com a minha, ou simplesmente prefira usar o Apache do que o Nginx.&lt;/p&gt;
&lt;p&gt;Caso o seu interesse seja mesmo usar o Nginx &lt;strike&gt;(pode parar por aqui)&lt;/strike&gt;, acho ótimo!!! Te dou todo apoio e ainda te indico um ótimo post para isso, do nosso amigo &lt;a href="https://github.com/igr-santos"&gt;Igor Santos&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pythonclub.com.br/configurando-um-servidor-de-producao-para-aplicacoes-python.html"&gt;Configurando um servidor de produção para aplicações Python&lt;/a&gt; (Nginx)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Agora, chega de conversa e vamos ao que interessa.&lt;/p&gt;
&lt;h3&gt;Como fazer?&lt;/h3&gt;
&lt;p&gt;Existem várias maneiras de se fazer o Django trabalhar com apache, uma delas é a combinação Apache + &lt;a href="http://code.google.com/p/modwsgi/"&gt;mod_wsgi&lt;/a&gt; e será dessa forma que faremos. Com mod_wsgi podemos implementar qualquer aplicação Python que suporte a interface &lt;strong&gt;Python WSGI&lt;/strong&gt;.&lt;/p&gt;
&lt;h5&gt;Instalando alguns pacotes necessários&lt;/h5&gt;
&lt;p&gt;Antes de mais nada, atualize a lista de pacotes&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get update
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;Apache + mod_wsgi&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get install apache2 libapache2-mod-wsgi
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;Python setup tools + pip&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get install python-setuptools
$ sudo apt-get install python-pip
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Vamos testar o WSGI?&lt;/h3&gt;
&lt;p&gt;Vamos fazer um teste com uma aplicação simples em python.&lt;/p&gt;
&lt;p&gt;Começe criando um diretório na raiz do apache &lt;em&gt;(DocumentRoot)&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo mkdir /var/www/wsgi_test
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Em seguida vamos criar nossa app de teste ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo vim /var/www/app.wsgi
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;... e escrever nossa app python compatível com WSGI&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;application&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;start_response&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;200 OK&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Hello World!&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;response_headers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Content-type&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;text/plain&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Content-Length&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;)))]&lt;/span&gt;
    &lt;span class="n"&gt;start_response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;response_headers&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Vamos criar agora um host para usar como nosso domínio da aplicação teste&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo vim /etc/hosts
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Adicione esta linha ao seu arquivo hosts&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="m"&gt;127&lt;/span&gt;.0.0.1 wsgi_test
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;E vamos configurar nosso VirtualHost no Apache.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo vim /etc/apache2/sites-available/wsgi_test
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;VirtualHost&lt;/span&gt; &lt;span class="s"&gt;*:80&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nb"&gt;ServerName&lt;/span&gt; wsgi_test
    &lt;span class="nb"&gt;DocumentRoot&lt;/span&gt; &lt;span class="sx"&gt;/var/www/wsgi_test&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;Directory&lt;/span&gt; &lt;span class="s"&gt;/var/www/wsgi_test&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nb"&gt;Order&lt;/span&gt; allow,deny
        &lt;span class="nb"&gt;Allow&lt;/span&gt; from &lt;span class="k"&gt;all&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/Directory&amp;gt;&lt;/span&gt;
    &lt;span class="nb"&gt;WSGIScriptAlias&lt;/span&gt; / &lt;span class="sx"&gt;/var/www/wsgi_test/app.wsgi&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/VirtualHost&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ative-o&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo a2ensite wsgi_test
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;Obs: esse comando cria um link simbólico do wsgi_test para a pasta sites-enabled. Você pode fazer isso manualmente.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Reinicie o apache:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo service apache2 reload
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Feito isso abra o &lt;strike&gt;internet explorer&lt;/strike&gt; seu navegador preferido e acesse &lt;a href="http://wsgi_test"&gt;http://wsgi_test&lt;/a&gt;. Se você está vendo a mensagem &lt;em&gt;"Hello World"&lt;/em&gt; pode comemorar, o wsgi está funcionando com o apache.&lt;/p&gt;
&lt;h3&gt;Configurando Django com WSGI&lt;/h3&gt;
&lt;p&gt;Até o momento entendemos como funciona a configuração do apache para receber uma aplicação Python com WSGI. Podemos usar essa ideia para qualquer aplicação python, porém veremos como fica essa configuração para trabalhar com &lt;strong&gt;Django&lt;/strong&gt;.&lt;/p&gt;
&lt;h5&gt;Criando o ambiente&lt;/h5&gt;
&lt;p&gt;É sempre bom trabalharmos com ambientes virtuais em nossas aplicações python, para isso temos o &lt;a href="https://virtualenv.pypa.io/en/latest/"&gt;virtualenv&lt;/a&gt;. Eu, particularmente, prefiro usar o &lt;a href="https://virtualenvwrapper.readthedocs.org/en/latest/"&gt;VirtualenvWrapper&lt;/a&gt;, que separa os ambientes virtuais das aplicações. Caso você não conheça, indico o post do &lt;a href="https://github.com/arruda/"&gt;Arruda&lt;/a&gt; que foi o que me guiou quando comecei a usar. &lt;a href="http://www.arruda.blog.br/programacao/python/usando-virtualenvwrapper/"&gt;Usando VirtualEnvWrapper&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;No meu caso usei o virtualenvwrapper e meu filesystem é o seguinte:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;+-- /home/guilouro
&lt;span class="p"&gt;|&lt;/span&gt;   +-- .virtualenvs  &lt;span class="c1"&gt;#[Ambientes]&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;   +-- www           &lt;span class="c1"&gt;#[Projetos]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;O Virtualenvwrapper criará meus projetos dentro de &lt;strong&gt;www&lt;/strong&gt; e os ambientes em &lt;strong&gt;.virtualenvs&lt;/strong&gt;. Mas para que isso aconteça temos que adicionar algumas linhas em nosso &lt;code&gt;~/.bashrc&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# adicione no final do arquivo ~/.bashrc&lt;/span&gt;
&lt;span class="c1"&gt;# ...&lt;/span&gt;
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;PROJECT_HOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;~/www
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;WORKON_HOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;~/.virtualenvs
&lt;span class="nb"&gt;source&lt;/span&gt; /usr/local/bin/virtualenvwrapper.sh
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Atualize com o comando:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;source&lt;/span&gt; ~/.bashrc
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;Criando nosso projeto&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ mkproject wsgi
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Com as configurações anteriores o virtualenvwrapper já irá ativar o ambiente e levar você para a pasta do projeto. Mas para ativar é muito simples, basta usar:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ workon wsgi
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Com o nosso ambiente virtual criado partiremos então para a criação do nosso projeto django. Utilizarei a versão mais atual até o momento, nesse caso 1.7&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ pip install django
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Não entrarei em detalhes para a configuração inicial do django, portanto irei usar um template que eu criei para a inicialização dos meus projeto. Criamos então o projeto dessa forma:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# startproject pelo template&lt;/span&gt;
$ django-admin.py startproject --template https://github.com/guilouro/django-boilerplate/archive/master.zip wsgitest .
&lt;span class="c1"&gt;# instala os pacotes&lt;/span&gt;
$ pip install -r requirements.txt
&lt;span class="c1"&gt;# faz a migração&lt;/span&gt;
$ python manage.py migrate
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Você encontra esse template aqui -&amp;gt; &lt;a href="https://github.com/guilouro/django-boilerplate"&gt;django-boilerplate&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;Criando um site no apache para o projeto&lt;/h5&gt;
&lt;p&gt;Primeiramente, vamos criar um domínio fictício para responder com o nosso projeto ao ser acessado.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo vim /etc/hosts

&lt;span class="m"&gt;127&lt;/span&gt;.0.0.1   djangowsgi.com
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Agora vamos configurar o apache:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo vim /etc/apache2/sites-available/djangowsgi
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;WSGIDaemonProcess&lt;/span&gt; djangowsgi.com python-path=/home/guilouro/www/wsgi:/home/guilouro/.virtualenvs/wsgi/lib/python2.7/site-packages
&lt;span class="nb"&gt;WSGIProcessGroup&lt;/span&gt; djangowsgi.com

&lt;span class="nt"&gt;&amp;lt;VirtualHost&lt;/span&gt; &lt;span class="s"&gt;*:80&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nb"&gt;ServerName&lt;/span&gt; djangowsgi.com
    &lt;span class="nb"&gt;WSGIScriptAlias&lt;/span&gt; / &lt;span class="sx"&gt;/home/guilouro/www/wsgi/wsgitest/wsgi.py&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;Directory&lt;/span&gt; &lt;span class="s"&gt;/home/guilouro/www/wsgi&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;Files&lt;/span&gt; &lt;span class="s"&gt;wsgi.py&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nb"&gt;Order&lt;/span&gt; allow,deny
            &lt;span class="nb"&gt;Allow&lt;/span&gt; from &lt;span class="k"&gt;all&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/Files&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/Directory&amp;gt;&lt;/span&gt;

    &lt;span class="nb"&gt;Alias&lt;/span&gt; &lt;span class="sx"&gt;/media/&lt;/span&gt; &lt;span class="sx"&gt;/home/guilouro/www/wsgi/media/&lt;/span&gt;
    &lt;span class="nb"&gt;Alias&lt;/span&gt; &lt;span class="sx"&gt;/static/&lt;/span&gt; &lt;span class="sx"&gt;/home/guilouro/www/wsgi/static/&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;Directory&lt;/span&gt; &lt;span class="s"&gt;/home/guilouro/www/wsgi/static&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nb"&gt;Order&lt;/span&gt; allow,deny
        &lt;span class="nb"&gt;Allow&lt;/span&gt; from &lt;span class="k"&gt;all&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/Directory&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;Directory&lt;/span&gt; &lt;span class="s"&gt;/home/guilouro/www/wsgi/media&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nb"&gt;Order&lt;/span&gt; allow,deny
        &lt;span class="nb"&gt;Allow&lt;/span&gt; from &lt;span class="k"&gt;all&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/Directory&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/VirtualHost&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Reinicie novamente o apache:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo service apache2 reload
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Explicarei agora um pouco do que foi usado nessa configuração&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;WSGIScriptAlias:&lt;/strong&gt; é a url na qual você estará servindo sua aplicação (/ indica a url raiz), e a segunda parte é a localização de um "arquivo WSGI".&lt;/p&gt;
&lt;h3&gt;Modo daemon&lt;/h3&gt;
&lt;p&gt;O modo &lt;em&gt;daemon&lt;/em&gt; é o modo recomendado para a execução do mod_wsgi(em plataformas não-windows). Ele gera um processo independente que lida com as solicitações e pode ser executado como um usuário diferente do servidor web. Um dos pontos positivos dele é que a cada alteração em seu projeto você não precisa restartar o apache, basta executar um &lt;code&gt;touch&lt;/code&gt; no seu arquivo &lt;code&gt;wsgi.py&lt;/code&gt;&lt;/p&gt;
&lt;h5&gt;Directivas para o daemon&lt;/h5&gt;
&lt;p&gt;&lt;strong&gt;WSGIDaemonProcess:&lt;/strong&gt; Foi atribuido a ele o nosso servername e utilizamos &lt;code&gt;python-path&lt;/code&gt; por se tratar de um projeto que esta em ambiente virtual. Passamos então nossas paths nele.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;WSGIProcessGroup:&lt;/strong&gt; Atribuímos o servername a ele&lt;/p&gt;
&lt;h4&gt;Testando a aplicação&lt;/h4&gt;
&lt;p&gt;Agora acesse &lt;a href="http://djangowsgi.com"&gt;http://djangowsgi.com&lt;/a&gt; e corre para o abraço.&lt;/p&gt;
&lt;p&gt;Espero que tenha ficado claro. Qualquer dúvida ou problema deixe nos comentários e vamos juntos tentar resolver.&lt;/p&gt;
&lt;hr&gt;
&lt;h5&gt;Referências:&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;modwsgiwiki - &lt;a href="https://code.google.com/p/modwsgi/wiki/"&gt;https://code.google.com/p/modwsgi/wiki/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Blogalizado - &lt;a href="http://www.blogalizado.com.br/deploy-de-aplicacao-django-no-apache-com-mod_wsgi/"&gt;http://www.blogalizado.com.br/deploy-de-aplicacao-django-no-apache-com-mod_wsgi/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Documentação oficial do django - &lt;a href="https://docs.djangoproject.com/en/1.7/howto/deployment/wsgi/modwsgi/"&gt;https://docs.djangoproject.com/en/1.7/howto/deployment/wsgi/modwsgi/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="python"></category><category term="django"></category><category term="apache"></category><category term="mod_wsgi"></category><category term="virtualenv"></category><category term="virtualenvwrapper"></category></entry></feed>